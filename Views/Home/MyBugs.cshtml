@model BugTrackerProject.ViewModels.MyBugsAndAssociatedProjects

@{
    ViewData["Title"] = "My Bugs";
    var bugsSortedByDueDate = Model.MyBugs.OrderByDescending(d => d.DueDate);

}
@*<div>
    <a class="btn btn-primary" href="@Url.Action("addbug", "home")">Add Bug</a>
</div>*@

    <div class="table-responsive-xl">
        <table class="table table-hover table-borderless table-striped">
            <thead>
                <tr>
                    <th scope="col">Bug Name</th>
                    <th scope="col">Reporter Id</th>
                    <th scope="col">Assignee Id</th>
                    <th scope="col">Status</th>
                    <th scope="col">Severity</th>
                    <th scope="col">Entered Date</th>
                    <th scope="col">Due Date</th>
                    <th scope="col">Associated Project</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var bug in bugsSortedByDueDate)
                {
                    <tr>
                        <th><a href="@Url.Action("bugdetails", "bug", new { bugId = bug.BugId })">@bug.Title</a></th>
                        <td>@bug.ReporterUserName</td>
                        <td>@bug.AssingeeUserName
                        </td>
                        <td>
                            @{
                                var statusBackgroundColor = "";
                                var badgeText = "";
                                switch (bug.Status)
                                {
                                    case BugStatus.closed:
                                        badgeText = "Closed";
                                        statusBackgroundColor = "#00bc8c";
                                        break;
                                    case BugStatus.open:
                                        badgeText = "Open";
                                        statusBackgroundColor = "#375a7f";
                                        break;
                                    case BugStatus.to_be_tested:
                                        statusBackgroundColor = "#3498DB";
                                        badgeText = "To Be Tested";
                                        break;
                                }
                            }
                            <span class="badge badge-pill"  style="background-color: @statusBackgroundColor; color: black;">@badgeText</span>
                        </td>
                        <td>
                            @{
                                var seveirtyBackgroundColor = "";
                                switch (bug.Severity)
                                {
                                    case BugSeverity.critical:
                                        seveirtyBackgroundColor = "#b81c04";
                                        break;
                                    case BugSeverity.major:
                                        seveirtyBackgroundColor = "#d67404";
                                        break;
                                    case BugSeverity.minor:
                                        seveirtyBackgroundColor = "#ffee00";
                                        break;
                                }
                            }
                            <span class="badge badge-pill" style="background-color: @seveirtyBackgroundColor; color: black;">@bug.Severity</span>
                        </td>
                        <td>@bug.EnteredDate.ToShortDateString()</td>
                        <td>@bug.DueDate.ToShortDateString()</td>
                        @{
                            var associatedProject = new List<ProjectAttributes>();
                            foreach (var project in Model.AssociatedProjects)
                            {
                                if (bug.AssociatedProject == project.ProjectId)
                                {
                                    associatedProject.Add(project);
                                    break;
                                }
                            }
                        }
                        <td><a href="@Url.Action("projectdetails", "project", new { projectId = associatedProject[0].ProjectId })">@associatedProject[0].ProjectName</a></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
