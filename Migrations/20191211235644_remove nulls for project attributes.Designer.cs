// <auto-generated />
using System;
using BugTrackerProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BugTrackerProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191211235644_remove nulls for project attributes")]
    partial class removenullsforprojectattributes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BugTrackerProject.Models.BugAttributes", b =>
                {
                    b.Property<int>("BugId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssingeeId")
                        .HasColumnType("int");

                    b.Property<int>("AssociatedProject")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EnteredDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReporterID")
                        .HasColumnType("int");

                    b.Property<int>("Reproducible")
                        .HasColumnType("int");

                    b.Property<int>("Severity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BugId");

                    b.ToTable("Bugs");
                });

            modelBuilder.Entity("BugTrackerProject.Models.ProjectAttributes", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("BugTrackerProject.Models.SubModels.ProjectBugs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BugId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectAttributesProjectId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectAttributesProjectId");

                    b.ToTable("ProjectBugs");
                });

            modelBuilder.Entity("BugTrackerProject.Models.SubModels.ScreenShots", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssociatedBug")
                        .HasColumnType("int");

                    b.Property<int?>("BugAttributesBugId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("BugAttributesBugId");

                    b.ToTable("ScreenShots");
                });

            modelBuilder.Entity("BugTrackerProject.Models.SubModels.UsersAssigned", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssignedUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectAttributesProjectId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectAttributesProjectId");

                    b.ToTable("UsersAssigned");
                });

            modelBuilder.Entity("BugTrackerProject.Models.SubModels.ProjectBugs", b =>
                {
                    b.HasOne("BugTrackerProject.Models.ProjectAttributes", null)
                        .WithMany("ProjectBugs")
                        .HasForeignKey("ProjectAttributesProjectId");
                });

            modelBuilder.Entity("BugTrackerProject.Models.SubModels.ScreenShots", b =>
                {
                    b.HasOne("BugTrackerProject.Models.BugAttributes", null)
                        .WithMany("ScreenShots")
                        .HasForeignKey("BugAttributesBugId");
                });

            modelBuilder.Entity("BugTrackerProject.Models.SubModels.UsersAssigned", b =>
                {
                    b.HasOne("BugTrackerProject.Models.ProjectAttributes", null)
                        .WithMany("UsersAssigned")
                        .HasForeignKey("ProjectAttributesProjectId");
                });
#pragma warning restore 612, 618
        }
    }
}
